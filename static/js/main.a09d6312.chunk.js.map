{"version":3,"sources":["time/DateTime.js","todo/TodoForm.js","todo/Todo.js","todo/TodoList.js","App.js","index.js"],"names":["DateTime","useState","clock","setClock","useEffect","setInterval","date","Date","toLocaleTimeString","displayDate","toDateString","className","TodoForm","props","edit","value","input","setInput","ref","useRef","current","focus","handleText","event","target","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","setName","answer","prompt","curHr","getHours","test","newTodo","console","log","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a09d6312.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\n\r\nfunction DateTime() {\r\n    const [clock, setClock] = useState()\r\n\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            const date = new Date()\r\n            setClock(date.toLocaleTimeString())\r\n        }, 1000)\r\n    }, [])\r\n\r\n    let showDate = new Date()\r\n    let displayDate = showDate.toDateString()\r\n\r\n\r\n    return (\r\n        <div>\r\n            <center className=\"timestamp\">\r\n                {displayDate} - {clock}\r\n            </center>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DateTime\r\n","import React, {useState, useEffect, useRef} from 'react'\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : \"\")\r\n\r\n    const ref = useRef(null)\r\n\r\n    useEffect(() => {\r\n        ref.current.focus()\r\n    })\r\n    \r\n    const handleText = event => {\r\n        setInput(event.target.value)\r\n    }\r\n    const handleSubmit = event => {\r\n        event.preventDefault()\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random() * 1000000000), //generate random id, odd of having the same id will be slim\r\n            text: input\r\n        })\r\n        setInput(\"\") //after submit, text field will be empty\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n            {props.edit ? ( \r\n                <>\r\n            <input \r\n             type=\"text\"\r\n             placeholder=\"Update Todo\"\r\n             value={input}\r\n             name=\"text\"\r\n             className=\"todo-input edit\"\r\n             onChange={handleText}\r\n             ref={ref}\r\n             />\r\n             <button className=\"todo-button edit\">Update</button>\r\n             </> \r\n             ) :\r\n            ( \r\n                <>\r\n                 <input \r\n                type=\"text\"\r\n                placeholder=\"Add todo\"\r\n                value={input}\r\n                name=\"text\"\r\n                className=\"todo-input\"\r\n                onChange={handleText}\r\n                ref={ref}\r\n                />\r\n                <button className=\"todo-button\">Add Todo</button>\r\n                </> \r\n                )}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","import React, {useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { MdDeleteForever } from \"react-icons/md\"\r\nimport { FiEdit } from \"react-icons/fi\" \r\n\r\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: \"\"\r\n    })\r\n\r\n    const submitUpdate = value => {\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: \"\"\r\n        })\r\n    }\r\n\r\n    if (edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => (\r\n        <div className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"} \r\n        key={index}\r\n        >\r\n           <div className=\"todo-text\" key={todo.id} onClick={() => completeTodo(todo.id)}\r\n           >\r\n                {todo.text}\r\n            </div> \r\n\r\n            <div className = \"icons\">\r\n                <MdDeleteForever \r\n                onClick={() => removeTodo(todo.id)}\r\n                className=\"delete-icon\"\r\n                />\r\n                <FiEdit \r\n                onClick={() => setEdit({ id: todo.id, value: todo.text})}\r\n                className=\"edit-icon\"\r\n                />\r\n\r\n            </div>\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default Todo\r\n","import React, {useState, useEffect} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport Todo from './Todo'\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState([])\r\n    const [name, setName] = useState([])\r\n\r\n    const addTodo = todo => {\r\n\r\n        //got this piece on stackoverflow (wanted no spacing in todo)\r\n        if (!todo.text || !/\\S/.test(todo.text)) {\r\n            return\r\n        }\r\n\r\n        const newTodo = [todo, ...todos]\r\n        setTodos(newTodo)\r\n        console.log(todo, ...todos)\r\n    }\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id)\r\n\r\n        setTodos(removeArr)\r\n    }\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if (!newValue.text || !/\\S/.test(newValue.text)) {\r\n            return\r\n        }\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\r\n    }\r\n\r\n    const completeTodo = id => {\r\n        let updateTodo = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete\r\n            }\r\n            return todo\r\n        })\r\n        setTodos(updateTodo)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        let answer = prompt(\"Please enter your name\")\r\n        setName(answer)\r\n    }, [])\r\n\r\n\r\n    let today = new Date()\r\n    let curHr = today.getHours()\r\n    let text \r\n    \r\n    if (curHr < 12) {\r\n        text = \"Good morning\"\r\n    } else if (curHr < 18) {\r\n        text = \"Good afternoon\"\r\n    } else {\r\n        text = \"Good Evening\"\r\n    }\r\n\r\n \r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>{text} {name}, Plan out your day!</h1>\r\n            <TodoForm  onSubmit={addTodo}/>\r\n            <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import './App.css';\nimport DateTime from './time/DateTime';\nimport TodoList from './todo/TodoList';\n\nfunction App() {\n  return (\n    <>\n    <div>\n      <DateTime />\n    </div>\n    <div className=\"todo-app\">\n      <TodoList />\n\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}